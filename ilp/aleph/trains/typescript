Script started on Fri 15 Nov 2002 12:33:17 GMT
[1m~[41]>[m cd ~/aleph/test/examples/trains
[1m~/aleph/test/examples/trains[42]>[m yap
[ Restoring file /users/ashwin/Yap-4.3.18/solaris/startup ]
[ YAP version Yap-4.3.18 ]
   ?- [aleph].
 [ consulting aleph... ]


A L E P H
Version 4
Last modified: Wed Nov 13 16:18:53 GMT 2002

Manual: http://www.comlab.ox.ac.uk/oucl/groups/machlearn/Aleph/index.html

 [ aleph consulted 1160056 bytes in 0.46 seconds ]

yes
   ?- read_all(train).
 [ reconsulting train.b... ]
 [ train.b reconsulted 47092 bytes in 0.02 seconds ]
[consulting pos examples] [train.f]
[consulting neg examples] [train.n]

yes
   ?- induce.
[select example] [1]
[sat] [1]
[eastbound(east1)]

[bottom clause]
eastbound(A) :-
   has_car(A,B), has_car(A,C), has_car(A,D), has_car(A,E), 
   short(B), short(D), closed(D), long(C), 
   long(E), open_car(B), open_car(C), open_car(E), 
   shape(B,rectangle), shape(C,rectangle), shape(D,rectangle), shape(E,rectangle), 
   wheels(B,2), wheels(C,3), wheels(D,2), wheels(E,2), 
   load(B,circle,1), load(C,hexagon,1), load(D,triangle,1), load(E,rectangle,3).
[literals] [25]
[saturation time] [0.01]
[reduce]
[best label so far] [[1,0,2,1]/0]
eastbound(A).
[5/5]
eastbound(A) :-
   has_car(A,B).
[5/5]
eastbound(A) :-
   has_car(A,B).
[5/5]
eastbound(A) :-
   has_car(A,B).
[5/5]
eastbound(A) :-
   has_car(A,B).
[5/5]
eastbound(A) :-
   has_car(A,B), short(B).
[5/5]
eastbound(A) :-
   has_car(A,B), open_car(B).
[5/5]
eastbound(A) :-
   has_car(A,B), shape(B,rectangle).
[5/5]
eastbound(A) :-
   has_car(A,B), wheels(B,2).
[5/5]
eastbound(A) :-
   has_car(A,B), load(B,circle,1).
[3/3]
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), long(B).
[2/5]
eastbound(A) :-
   has_car(A,B), open_car(B).
[5/5]
eastbound(A) :-
   has_car(A,B), shape(B,rectangle).
[5/5]
eastbound(A) :-
   has_car(A,B), wheels(B,3).
[3/1]
eastbound(A) :-
   has_car(A,B), load(B,hexagon,1).
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), short(B).
[5/5]
eastbound(A) :-
   has_car(A,B), closed(B).
[5/2]
eastbound(A) :-
   has_car(A,B), shape(B,rectangle).
[5/5]
eastbound(A) :-
   has_car(A,B), wheels(B,2).
[5/5]
eastbound(A) :-
   has_car(A,B), load(B,triangle,1).
[5/2]
eastbound(A) :-
   has_car(A,B), has_car(A,C).
[5/5]
eastbound(A) :-
   has_car(A,B), long(B).
[2/5]
eastbound(A) :-
   has_car(A,B), open_car(B).
[5/5]
eastbound(A) :-
   has_car(A,B), shape(B,rectangle).
[5/5]
eastbound(A) :-
   has_car(A,B), wheels(B,2).
[5/5]
eastbound(A) :-
   has_car(A,B), load(B,rectangle,3).
eastbound(A) :-
   has_car(A,B), closed(B), shape(B,rectangle).
eastbound(A) :-
   has_car(A,B), closed(B), wheels(B,2).
eastbound(A) :-
   has_car(A,B), closed(B), load(B,triangle,1).
[2/0]
[-------------------------------------]
[found clause]
eastbound(A) :-
   has_car(A,B), closed(B), load(B,triangle,1).
[pos-neg] [2]
[clause label] [[2,0,4,2]]
[clauses constructed] [34]
[-------------------------------------]
eastbound(A) :-
   has_car(A,B), closed(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), load(B,triangle,1), has_car(A,C).
eastbound(A) :-
   has_car(A,B), wheels(B,3), has_car(A,C).
eastbound(A) :-
   has_car(A,B), wheels(B,3), has_car(A,C).
eastbound(A) :-
   has_car(A,B), short(B), open_car(B).
eastbound(A) :-
   has_car(A,B), short(B), shape(B,rectangle).
eastbound(A) :-
   has_car(A,B), short(B), wheels(B,2).
eastbound(A) :-
   has_car(A,B), short(B), load(B,circle,1).
eastbound(A) :-
   has_car(A,B), short(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), short(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), short(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), open_car(B), shape(B,rectangle).
eastbound(A) :-
   has_car(A,B), open_car(B), wheels(B,2).
eastbound(A) :-
   has_car(A,B), open_car(B), load(B,circle,1).
eastbound(A) :-
   has_car(A,B), open_car(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), open_car(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), open_car(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), wheels(B,2).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), load(B,circle,1).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), has_car(A,C).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), has_car(A,C).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), has_car(A,C).
eastbound(A) :-
   has_car(A,B), wheels(B,2), load(B,circle,1).
eastbound(A) :-
   has_car(A,B), wheels(B,2), has_car(A,C).
eastbound(A) :-
   has_car(A,B), wheels(B,2), has_car(A,C).
eastbound(A) :-
   has_car(A,B), wheels(B,2), has_car(A,C).
eastbound(A) :-
   has_car(A,B), load(B,circle,1), has_car(A,C).
eastbound(A) :-
   has_car(A,B), load(B,circle,1), has_car(A,C).
eastbound(A) :-
   has_car(A,B), load(B,circle,1), has_car(A,C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), long(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), open_car(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), shape(C,rectangle).
eastbound(A) :-
   has_car(A,B), has_car(A,C), wheels(C,3).
eastbound(A) :-
   has_car(A,B), has_car(A,C), load(C,hexagon,1).
eastbound(A) :-
   has_car(A,B), has_car(A,C), has_car(A,D).
eastbound(A) :-
   has_car(A,B), has_car(A,C), has_car(A,D).
eastbound(A) :-
   has_car(A,B), has_car(A,C), short(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), closed(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), shape(C,rectangle).
eastbound(A) :-
   has_car(A,B), has_car(A,C), wheels(C,2).
eastbound(A) :-
   has_car(A,B), has_car(A,C), load(C,triangle,1).
eastbound(A) :-
   has_car(A,B), has_car(A,C), has_car(A,D).
eastbound(A) :-
   has_car(A,B), has_car(A,C), long(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), open_car(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), shape(C,rectangle).
eastbound(A) :-
   has_car(A,B), has_car(A,C), wheels(C,2).
eastbound(A) :-
   has_car(A,B), has_car(A,C), load(C,rectangle,3).
eastbound(A) :-
   has_car(A,B), open_car(B), shape(B,rectangle).
eastbound(A) :-
   has_car(A,B), open_car(B), wheels(B,3).
eastbound(A) :-
   has_car(A,B), open_car(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), open_car(B), has_car(A,C).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), wheels(B,3).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), has_car(A,C).
eastbound(A) :-
   has_car(A,B), shape(B,rectangle), has_car(A,C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), short(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), closed(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), shape(C,rectangle).
eastbound(A) :-
   has_car(A,B), has_car(A,C), wheels(C,2).
eastbound(A) :-
   has_car(A,B), has_car(A,C), load(C,triangle,1).
eastbound(A) :-
   has_car(A,B), has_car(A,C), has_car(A,D).
eastbound(A) :-
   has_car(A,B), has_car(A,C), long(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), open_car(C).
eastbound(A) :-
   has_car(A,B), has_car(A,C), shape(C,rectangle).
eastbound(A) :-
   has_car(A,B), has_car(A,C), wheels(C,2).
eastbound(A) :-
   has_car(A,B), has_car(A,C), load(C,rectangle,3).
eastbound(A) :-
   has_car(A,B), short(B), closed(B).
[5/0]
[-------------------------------------]
[found clause]
eastbound(A) :-
   has_car(A,B), short(B), closed(B).
[pos-neg] [5]
[clause label] [[5,0,4,5]]
[clauses constructed] [100]
[-------------------------------------]
[clauses constructed] [100]
[search time] [0.05]
[best clause]
eastbound(A) :-
   has_car(A,B), short(B), closed(B).
[pos-neg] [5]
[atoms left] [0]

[theory]

[Rule 1] [Pos cover = 5 Neg cover = 0]
eastbound(A) :-
   has_car(A,B), short(B), closed(B).

[Training set performance]
          Actual
       +        - 
     + 5        0        5 
Pred 
     - 0        5        5 

       5        5        10 

Accuracy = 1.0
[Training set summary] [[5,0,0,5]]
[time taken] [0.07]
[total clauses constructed] [100]

yes
   ?- [1m~/aleph/test/examples/trains[43]>[m exit
exit

script done on Fri 15 Nov 2002 12:33:41 GMT
